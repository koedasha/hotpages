Unexpected deliverables, delayed deadlines, and codebases that are hard to change.

What can we do to solve or prevent the challenges that are inherent in software development?

By building on agile development and delivering small releases, we can quickly deliver results and enable flexible course corrections as needed. By maintaining an organized codebase and test code, we can create software that is resilient to change.

While valuing basic practices, what can we do __right now, in this project__?

Koeda-sha will keep thinking.

<%= contact %>

### Works

We specialize in the rapid development of web applications using Ruby on Rails and Hotwire.

Development of a renovation portal site
: We developed a new renovation portal site. This included the development of new payment services such as post-payment systems. During the service's growth phase, we also handled framework upgrades (including asset delivery updates).

  Supported the early launch of the service through rapid development and its continuous growth and improvement.

  - <%= tech_icon_tag(:rails) %>
  - <%= tech_icon_tag(:react) %>

Codebase improvement for a reuse item purchasing service
: We improved the codebase for a reuse item purchasing service. This included structuring JavaScript and upgrading the framework version.

  - <%= tech_icon_tag(:rails) %>

Backend development for an instant reuse item purchasing service
: We developed the backend for an instant reuse item purchasing service. By utilizing OpenAPI, we were able to develop the client app and backend simultaneously. A single engineer achieved the release in less than two months.

  - <%= tech_icon_tag(:rails) %>
  - Grape

Backend development for an identity verification service
: Focused on new feature development, including implementation, codebase improvement, and framework upgrades.

  - <%= tech_icon_tag(:rails) %>
  - <%= tech_icon_tag(:react) %>

Renewal development for a management support service
: We handled the renewal development of a management support service for a major company. Specifically, we implemented a full calendar feature with external service synchronization for 1-on-1 scheduling.

  - <%= tech_icon_tag(:rails) %>
  - <%= tech_icon_tag(:nuxt) %>

Others

<%= contact %>
